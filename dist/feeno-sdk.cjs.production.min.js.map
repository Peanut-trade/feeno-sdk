{"version":3,"file":"feeno-sdk.cjs.production.min.js","sources":["../src/types/transactions.ts","../src/types/Submit.ts","../src/types/SupportedChains.ts","../node_modules/regenerator-runtime/runtime.js","../src/FeeNoApiRequests.ts","../src/types/share.ts","../src/FeeNo.ts","../src/WalletFeeNoRequest.ts","../src/Web3ProviderFeeNoRequest.ts"],"sourcesContent":["import { AddressLike, BNLike } from 'ethereumjs-util';\n\nexport enum TransactionType {\n  TransferType = 'transfer',\n  SwapInputType = 'exactInput',\n  SwapOutputType = 'exactOutput',\n  SwapInputSingleType = 'exactInputSingle',\n  SwapOutputSingleType = 'exactOutputSingle',\n  ClaimFeeType = 'claimFee',\n  CreatePositionType = 'createPosition',\n  IncreaseLiquidityType = 'increaseLiquidity',\n  DecreaseLiquidityType = 'decreaseLiquidity',\n  CollectType = 'collect',\n  SwapExactTokensForTokensType = 'swapExactTokensForTokens',\n  SwapExactTokensForETHType = 'swapExactTokensForETH',\n  SwapExactETHForTokensType = 'swapExactETHForTokens',\n}\n\nexport type TransactionBody =\n  | TransactionForTransfer\n  | TransactionForExactInput\n  | TransactionForExactOutput\n  | TransactionForExactInputSingle\n  | TransactionForExactOutputSingle\n  | TransactionForSwapExactTokensForTokens\n  | TransactionForSwapTokensForExactTokens\n  | TransactionForCreatePosition\n  | TransactionForIncreaseLiquidity\n  | TransactionForDecreaseLiquidity\n  | TransactionForCollect;\n\nexport interface TransactionForTransfer {\n  addressTo: AddressLike;\n  amount: BNLike;\n  tokenContractAddress: AddressLike;\n}\n\nexport interface TransactionForExactInput {\n  path: string;\n  recipient: AddressLike;\n  deadline: number;\n  amountIn: BNLike;\n  amountOutMinimum: BNLike;\n  value?: BNLike;\n}\n\nexport interface TransactionForDecreaseLiquidity {\n  recipient: AddressLike;\n  tokenId: number;\n  deadline: number;\n  amount0Min: BNLike;\n  amount1Min: BNLike;\n  liquidity: BNLike;\n}\n\nexport interface TransactionForCollect {\n  recipient: AddressLike;\n  tokenId: number;\n  amount0Max: BNLike;\n  amount1Max: BNLike;\n}\n\nexport interface TransactionForExactOutput {\n  path: string;\n  recipient: AddressLike;\n  deadline: number;\n  amountOut: BNLike;\n  amountInMaximum: BNLike;\n  value?: BNLike;\n}\n\nexport interface TransactionForExactInputSingle {\n  tokenIn: AddressLike;\n  tokenOut: AddressLike;\n  fee: BNLike;\n  recipient: AddressLike;\n  deadline: number;\n  amountIn: BNLike;\n  amountOutMinimum: BNLike;\n  sqrtPriceLimitX96: BNLike;\n  value?: BNLike;\n}\n\nexport interface TransactionForExactOutputSingle {\n  tokenIn: AddressLike;\n  tokenOut: AddressLike;\n  fee: BNLike;\n  recipient: AddressLike;\n  deadline: number;\n  amountOut: BNLike;\n  amountInMaximum: BNLike;\n  sqrtPriceLimitX96: BNLike;\n  value?: BNLike;\n}\n\nexport interface TransactionForSwapExactTokensForTokens {\n  amountIn: BNLike;\n  amountOutMin: BNLike;\n  path: AddressLike[];\n  to: AddressLike;\n  deadline: number;\n}\n\nexport interface TransactionForSwapTokensForExactTokens {\n  amountOut: BNLike;\n  amountInMax: BNLike;\n  path: AddressLike[];\n  to: AddressLike;\n  deadline: number;\n}\n\nexport interface TransactionForCreatePosition {\n  token0: AddressLike;\n  token1: AddressLike;\n  fee: BNLike;\n  tickLower: BNLike;\n  tickUpper: BNLike;\n  amount0Desired: BNLike;\n  amount1Desired: BNLike;\n  amount0Min: BNLike;\n  amount1Min: BNLike;\n  recipient: AddressLike;\n  deadline: number;\n  sqrtPriceX96?: BNLike;\n  value?: BNLike;\n}\n\nexport interface TransactionForIncreaseLiquidity {\n  tokenId: number;\n  amount0Desired: BNLike;\n  amount1Desired: BNLike;\n  amount0Min: BNLike;\n  amount1Min: BNLike;\n  deadline: number;\n  value?: BNLike;\n}\n","/**\n *\n * @export\n * @interface Submit\n */\nimport { EstimationId } from './share';\n\nexport interface Submit {\n  /**\n   * Identifier of estimation result received during estimate operation\n   * @type {string}\n   * @memberof Submit\n   */\n  estimationId: EstimationId;\n  /**\n   * Signed approval transaction (if estimation result param \\\"approveRequired\\\" == true). Hex | null\n   * @type {string}\n   * @memberof Submit\n   */\n  approvalTxRawData: string[];\n  /**\n   * Signed message\n   * @type {string}\n   * @memberof Submit\n   */\n  userSign: string;\n  /**\n   * Processing mode (dexSwap | cexSwap)\n   * @type {string}\n   * @memberof Submit\n   */\n  processingMode: string;\n  /**\n   * Mining speed (fast | medium | slow)\n   * @type {string}\n   * @memberof Submit\n   */\n  miningSpeed: string;\n  /**\n   * Blocks count to retry resubmit. Feeno will resubmit transactions, until they will be mined or required blocks count will pass. Default: 10. (optional)\n   * @type {number}\n   * @memberof Submit\n   */\n  blocksCountToResubmit?: number;\n}\n\n/**\n *\n * @export\n * @interface SubmissionResponse\n */\nexport interface SubmissionResponse {\n  /**\n   *\n   * @type {string}\n   * @memberof SubmissionResponse\n   */\n  bundleId?: string;\n  /**\n   *\n   * @type {string}\n   * @memberof SubmissionResponse\n   */\n  status?: string;\n  /**\n   *\n   * @type {number}\n   * @memberof SubmissionResponse\n   */\n  broadcastCount?: number;\n  /**\n   *\n   * @type {number}\n   * @memberof SubmissionResponse\n   */\n  blocksCountToResubmit?: number;\n  /**\n   *\n   * @type {string[]}\n   * @memberof SubmissionResponse\n   */\n  transactionHashes?: string[];\n}\n\nexport type Speed = 'slow' | 'medium' | 'fast';\n\nexport enum ExType {\n  DEX = 'dexSwap',\n  CEX = 'cexSwap',\n}\n\n/**\n *\n * @export\n * @interface RequestParams\n */\nexport interface RequestParams {\n  /**\n   *\n   * @type {ExType}\n   * @memberof RequestParams\n   */\n  exType: ExType | 'optimalSwap';\n  /**\n   *\n   * @type {Speed}\n   * @memberof RequestParams\n   */\n  speed: Speed;\n}\n","export enum SupportedChains {\n  MAINNET = 1,\n  GOERLI = 5,\n}\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = GeneratorFunctionPrototype;\n  define(Gp, \"constructor\", GeneratorFunctionPrototype);\n  define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction);\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  });\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  define(Gp, iteratorSymbol, function() {\n    return this;\n  });\n\n  define(Gp, \"toString\", function() {\n    return \"[object Generator]\";\n  });\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, in modern engines\n  // we can explicitly access globalThis. In older engines we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  if (typeof globalThis === \"object\") {\n    globalThis.regeneratorRuntime = runtime;\n  } else {\n    Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n  }\n}\n","import axios from 'axios';\nimport { Estimate, EstimationResponse, SubmissionResponse, Submit, SupportedTokens } from './types';\n\nexport interface IFeeNoApiRequests {\n  getTokens(): Promise<SupportedTokens>;\n  createFeenoRequest(requestParams: Estimate): Promise<EstimationResponse>;\n  send(txToSubmit: Submit): Promise<SubmissionResponse>;\n  getStatus(bundleId: string): Promise<SubmissionResponse>;\n  cancel(bundleId: string): Promise<SubmissionResponse>;\n}\nexport class FeeNoApiRequests implements IFeeNoApiRequests {\n  /**\n   * Url that is passed to constructor for the future requests creation.\n   * @type {apiUrl:string}\n   */\n  apiUrl: string;\n\n  /**\n   * FeeNoApiRequests instance is being created by the FeeNo class constructor.\n   * Constructor need the apiUrl as the input param.\n   */\n  constructor(apiUrl: string) {\n    this.apiUrl = apiUrl;\n  }\n\n  /**\n   * Send request for a list of the supported tokens to pay fee to Api.\n   * @returns {Promise<SupportedTokens>}\n   */\n  async getTokens(): Promise<SupportedTokens> {\n    const url = `${this.apiUrl}/tokens`;\n    const response = await axios.get(url);\n    return response.data.tokens;\n  }\n\n  /**\n   * Send estimation request to Api.\n   * @param {Estimate} requestParams\n   * @returns {Promise<FeeNoRequest>}\n   */\n  async createFeenoRequest(requestParams: Estimate): Promise<EstimationResponse> {\n    const url = `${this.apiUrl}/estimate`;\n    const response = await axios.post(url, requestParams);\n    return response.data;\n  }\n\n  /**\n   * Send submit request to Api.\n   * @param {Submit} txToSubmit\n   * @returns {Promise<SubmissionResponse>}\n   */\n  async send(txToSubmit: Submit): Promise<SubmissionResponse> {\n    const url = `${this.apiUrl}/submit`;\n    const response = await axios.post(url, txToSubmit);\n    return response.data;\n  }\n\n  /**\n   * Send getStatus request to Api.\n   * @param {string} bundleId\n   * @returns {Promise<SubmissionResponse>}\n   */\n  async getStatus(bundleId: string): Promise<SubmissionResponse> {\n    const url = `${this.apiUrl}/bundle/${bundleId}`;\n    const response = await axios.get(url);\n    return response.data;\n  }\n\n  /**\n   * Send cancel request to Api.\n   * @param {string} bundleId\n   * @returns {Promise<SubmissionResponse>}\n   */\n  async cancel(bundleId: string): Promise<SubmissionResponse> {\n    const url = `${this.apiUrl}/bundle/${bundleId}/cancel`;\n    const response = await axios.delete(url);\n    return response.data;\n  }\n}\n","export type BundleId = string;\nexport type EstimationId = string;\nexport enum TransactionStatus {\n  InprogressType = 'inProgress',\n}\nexport type FeePayerType = 'receiver' | 'sender';\nexport type EstimateStatus = 'success' | 'failed';\n","import { Web3Provider } from '@ethersproject/providers';\nimport { AddressLike } from 'ethereumjs-util';\nimport { Wallet } from 'ethers';\nimport config from '../config/default.json';\nimport { IFeeNoRequest, WalletFeeNoRequest, Web3ProviderFeeNoRequest } from '.';\nimport { FeeNoApiRequests } from './FeeNoApiRequests';\nimport { Estimate, SupportedTokens, SupportedChains } from './types';\n\ninterface IFeeNo {\n  createFeenoRequest(params: Estimate, provider: Web3Provider): Promise<IFeeNoRequest>;\n  getTokens(): Promise<SupportedTokens>;\n}\n\nexport class FeeNo implements IFeeNo {\n  chainId: SupportedChains;\n\n  apiURL: string;\n\n  FeeNoContract: AddressLike;\n\n  FeeNoApi: FeeNoApiRequests;\n\n  /**\n   * Constructor need the chainId as the input params(for example, Goerli testnet chainId is 5).\n   ** Default chainId is 1(MainNet).\n   * @example\n   * Implementation with all params.\n   * ```typescript\n   * import { FeeNo, FeeNoApiRequests }  from '@peanut.trade/feeno-sdk';\n   *\n   * const feeNo = new FeeNo(5);\n   * ```\n   */\n  constructor(chainId = 1) {\n    if (!Object.values(SupportedChains).includes(chainId)) throw new Error('Unsupported network');\n    this.chainId = chainId;\n    this.apiURL = config[this.chainId].apiURL;\n    this.FeeNoApi = new FeeNoApiRequests(this.apiURL);\n  }\n\n  /**\n   * Make and send estimate request with given estimation data and user's provider.\n   * @example\n   * ```typescript\n   * import { FeeNo, FeeNoApiRequests }  from '@peanut.trade/feeno-sdk';\n   *\n   * const feeNo = new FeeNo();\n   * const FeeNoRequest = feeNo.createFeenoRequest(estimateParams, provider);\n   * ```\n   * @param {Estimate} params\n   * @param {Web3Provider} provider\n   * @returns {Promise<IFeeNoRequest>}\n   */\n  async createFeenoRequest(\n    params: Estimate,\n    provider: Web3Provider | Wallet\n  ): Promise<IFeeNoRequest> {\n    const response = await this.FeeNoApi.createFeenoRequest(params);\n    if (provider.constructor.name === 'Wallet') {\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore\n      return new WalletFeeNoRequest(response, provider, this.chainId, this.FeeNoApi);\n    }\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    return new Web3ProviderFeeNoRequest(response, provider, this.chainId, this.FeeNoApi);\n  }\n\n  /**\n   * Returns the object of supported tokens to pay fee.\n   * @example\n   * ```typescript\n   * import { FeeNo, FeeNoApiRequests }  from '@peanut.trade/feeno-sdk';\n   *\n   * const feeNo = new FeeNo();\n   * const supportedTokens = feeNo.getTokens();\n   * ```\n   * @returns {Promise<SupportedTokens>}\n   */\n  async getTokens(): Promise<SupportedTokens> {\n    const response = await this.FeeNoApi.getTokens();\n    return response;\n  }\n}\n","import { Bytes, ethers, Wallet } from 'ethers';\nimport Common, { Hardfork } from '@ethereumjs/common';\nimport { AddressLike } from 'ethereumjs-util';\nimport { FeeMarketEIP1559Transaction } from '@ethereumjs/tx';\nimport { abi } from '@openzeppelin/contracts/build/contracts/ERC721.json';\nimport {\n  approveRequired,\n  EstimationResponse,\n  ExType,\n  RequestParams,\n  Speed,\n  SubmissionResponse,\n  SupportedChains,\n  TxData,\n} from './types';\nimport { FeeNoApiRequests } from './FeeNoApiRequests';\nimport ERC20ABI from './abis/ERC20.json';\nimport config from '../config/default.json';\nimport { IFeeNoRequest } from './FeeNoRequest';\n\nexport class WalletFeeNoRequest implements IFeeNoRequest {\n  estimationResponse: EstimationResponse;\n\n  provider: Wallet;\n\n  chainId: SupportedChains;\n\n  FeeNoApi: FeeNoApiRequests;\n\n  common: Common;\n\n  maxFeePerGas: string;\n\n  maxPriorityFeePerGas: string;\n\n  bundleId: string;\n\n  /**\n   * FeeNoRequests instance is being created in the FeeNo class by it's createFeenoRequest() method.\n   * @example\n   * Implementation with all params.\n   * ```typescript\n   * import { FeeNo, FeeNoApiRequests }  from '@peanut.trade/feeno-sdk';\n   *\n   * const feeNo = new FeeNo();\n   * const feeNoRequest = feeNo.createFeenoRequest(estimateData, provider);\n   * ```\n   */\n  constructor(\n    estimationResponse: EstimationResponse,\n    provider: Wallet,\n    chainId: SupportedChains,\n    FeeNoApi: FeeNoApiRequests\n  ) {\n    this.provider = provider;\n    this.estimationResponse = estimationResponse;\n    this.chainId = chainId;\n    this.FeeNoApi = FeeNoApi;\n    this.common = new Common({ chain: this.chainId, hardfork: Hardfork.London });\n    this.maxFeePerGas = ethers.utils.parseUnits(\n      this.estimationResponse.marketGasPriceGwei.baseFee.toString(),\n      'gwei'\n    )._hex;\n    this.maxPriorityFeePerGas = ethers.utils.hexlify(ethers.BigNumber.from(0));\n    this.bundleId = '0x';\n  }\n\n  private _getSwapType(sendRequest: RequestParams): ExType {\n    if (sendRequest.exType !== 'optimalSwap') {\n      return sendRequest.exType;\n    }\n    if (\n      !this.estimationResponse.executionSwap.cexSwap.miningSpeed[sendRequest.speed].ethGasFee ||\n      this.estimationResponse.executionSwap.dexSwap.miningSpeed[sendRequest.speed].ethGasFee <\n        this.estimationResponse.executionSwap.cexSwap.miningSpeed[sendRequest.speed].ethGasFee\n    ) {\n      return ExType.DEX;\n    }\n    return ExType.CEX;\n  }\n\n  private async _approveTokensUse(exType: ExType): Promise<string[]> {\n    const txsToApprove: approveRequired[] = this.estimationResponse.approveRequired;\n    const ERC721Abi = abi;\n    return Promise.all(\n      txsToApprove.map(async (txToApprove, txIndex) => {\n        const approvalGasUsage =\n          this.estimationResponse.executionSwap[exType].simulations.approve[txIndex].gasUsage;\n        let gasLimit;\n        let contract;\n        let amountOrId;\n        if (txToApprove.tokenId) {\n          contract = new ethers.Contract(\n            txToApprove.tokenAddress.toString(),\n            ERC721Abi,\n            this.provider\n          );\n          amountOrId = txToApprove.tokenId;\n          gasLimit = ethers.BigNumber.from(55000);\n        } else {\n          contract = new ethers.Contract(\n            txToApprove.tokenAddress.toString(),\n            ERC20ABI,\n            this.provider\n          );\n          amountOrId = txToApprove.amount;\n          gasLimit = ethers.BigNumber.from(approvalGasUsage);\n        }\n        const nonce = (await this.provider.getTransactionCount()) + txIndex;\n        const tx = await contract.populateTransaction.approve(txToApprove.spender, amountOrId, {\n          type: 2,\n          nonce: ethers.utils.hexlify(ethers.BigNumber.from(nonce), { hexPad: 'left' }),\n          maxFeePerGas: this.maxFeePerGas,\n          maxPriorityFeePerGas: this.maxPriorityFeePerGas,\n          gasLimit,\n        });\n        tx.chainId = this.chainId;\n        return this.provider.signTransaction(tx);\n      })\n    );\n  }\n\n  private async _approveETHTransfer(exType: ExType, speed: Speed, nonce: number): Promise<string> {\n    let value;\n    const signerAddress: AddressLike = await this.provider.getAddress();\n    const feenoContractAddress: AddressLike = config[this.chainId].FeeNoContract;\n\n    const ETHGasFee = (\n      this.estimationResponse.executionSwap[exType].miningSpeed[speed].ethGasFee *\n      10 ** 18\n    ).toFixed(0);\n\n    if (this.estimationResponse.ETHQuantity) {\n      value = this.estimationResponse.erc20TokenToPayFee\n        ? ethers.BigNumber.from(this.estimationResponse.ETHQuantity).add(ETHGasFee).toString()\n        : this.estimationResponse.ETHQuantity;\n    } else {\n      value = ETHGasFee;\n    }\n\n    const tx = {\n      type: 2,\n      chainId: this.chainId,\n      nonce: ethers.utils.hexlify(\n        ethers.BigNumber.from((await this.provider.getTransactionCount()) + nonce),\n        {\n          hexPad: 'left',\n        }\n      ),\n      maxFeePerGas: this.maxFeePerGas,\n      maxPriorityFeePerGas: this.maxPriorityFeePerGas,\n      gasLimit: ethers.utils.hexlify(ethers.BigNumber.from(21100), { hexPad: 'left' }),\n      from: signerAddress,\n      to: feenoContractAddress,\n      value: ethers.utils.hexlify(ethers.BigNumber.from(value)),\n    };\n    return this.provider.signTransaction(tx);\n  }\n\n  private async _signMessage(message: Bytes | string): Promise<string> {\n    const signature = await this.provider.signMessage(message);\n    return signature;\n  }\n\n  private async _getExecuteAllowance(exType: ExType, speed: Speed): Promise<string> {\n    const metadataToSign =\n      this.estimationResponse.executionSwap[exType].miningSpeed[speed].data.messageForSing;\n    const message = ethers.utils.arrayify(metadataToSign);\n    const signature = await this._signMessage(message);\n    return signature;\n  }\n\n  /**\n   * Send submit transaction.\n   * @example\n   * ```typescript\n   * import { FeeNo, FeeNoApiRequests }  from '@peanut.trade/feeno-sdk';\n   *\n   * const feeNo = new FeeNo( 1 );\n   * const feeNoRequest = feeNo.createFeenoRequest(estimateData, provider);\n   * // If submit is successful you will get SubmissionResponse typed response.\n   * const submitResponce = FeeNoRequestInstance.send(sendRequest);\n   * ```\n   * @param {RequestParams} sendRequest\n   * @returns {Promise<SubmissionResponse>}\n   */\n  async send(sendRequest: RequestParams): Promise<SubmissionResponse> {\n    const eXtype = this._getSwapType(sendRequest);\n\n    const approvalTxRawData = await this._approveTokensUse(eXtype);\n\n    if (this.estimationResponse.ETHQuantity || !this.estimationResponse.erc20TokenToPayFee) {\n      approvalTxRawData.push(\n        await this._approveETHTransfer(eXtype, sendRequest.speed, approvalTxRawData.length)\n      );\n    }\n\n    const metadataSignature = await this._getExecuteAllowance(eXtype, sendRequest.speed);\n\n    const txToSubmit = {\n      estimationId: this.estimationResponse.id,\n      approvalTxRawData,\n      userSign: metadataSignature,\n      processingMode: eXtype,\n      miningSpeed: sendRequest.speed,\n      blocksCountToResubmit: 20,\n    };\n\n    const response = await this.FeeNoApi.send(txToSubmit);\n    this.bundleId = response.bundleId ? response.bundleId : this.bundleId;\n    return response;\n  }\n\n  /**\n   * Cancel submit request if it's not mined yet.\n   * @example\n   * ```typescript\n   * import { FeeNo, FeeNoApiRequests }  from '@peanut.trade/feeno-sdk';\n   *\n   * const feeNo = new FeeNo( 1 );\n   * const feeNoRequest = feeNo.createFeenoRequest(estimateData, provider);\n   * // errorMessage: \"Transaction not found\"\n   * const cancelRequest1 = feeNoRequest.cancel();\n   *\n   * const submitResponce = feeNoRequest.send(sendRequest);\n   * // Transaction will be canceled. You will get SubmissionResponse type response.\n   * const cancelRequest2 = feeNoRequest.cancel();\n   *\n   * // Transaction is canceled already. You will get the same response as from cancelRequest2.\n   * const cancelRequest3 = feeNoRequest.cancel();\n   * ```\n   * @returns {Promise<SubmissionResponse>}\n   */\n  async cancel(): Promise<SubmissionResponse> {\n    return this.FeeNoApi.cancel(this.bundleId);\n  }\n\n  /**\n   * Get the transaction status.\n   * @example\n   * ```typescript\n   * import { FeeNo, FeeNoApiRequests }  from '@peanut.trade/feeno-sdk';\n   *\n   * const feeNo = new FeeNo( 1 );\n   * const feeNoRequest= feeNo.createFeenoRequest(estimateData, provider);\n   * // errorMessage: \"Please, send transaction first\"\n   * const cancelRequest1 = feeNoRequest.status();\n   *\n   * const submitResponce = feeNoRequest.send(sendRequest);\n   * // You will get SubmissionResponse type response\n   * const cancelRequest2 = feeNoRequest.status();\n   * ```\n   * @returns {Promise<SubmissionResponse>}\n   */\n  async getStatus(): Promise<SubmissionResponse> {\n    return this.FeeNoApi.getStatus(this.bundleId);\n  }\n}\n","import { JsonRpcSigner, Web3Provider } from '@ethersproject/providers';\nimport Common, { Hardfork } from '@ethereumjs/common';\nimport { ethers } from 'ethers';\nimport { AddressLike } from 'ethereumjs-util';\nimport { FeeMarketEIP1559Transaction } from '@ethereumjs/tx';\nimport { abi } from '@openzeppelin/contracts/build/contracts/ERC721.json';\nimport ERC20ABI from './abis/ERC20.json';\nimport config from '../config/default.json';\nimport { FeeNoApiRequests } from './FeeNoApiRequests';\nimport {\n  approveRequired,\n  EstimationResponse,\n  ExType,\n  RequestParams,\n  Speed,\n  SubmissionResponse,\n  SupportedChains,\n  TxData,\n} from './types';\nimport { IFeeNoRequest } from './FeeNoRequest';\n\nexport class Web3ProviderFeeNoRequest implements IFeeNoRequest {\n  estimationResponse: EstimationResponse;\n\n  provider: Web3Provider;\n\n  signer: JsonRpcSigner;\n\n  chainId: SupportedChains;\n\n  FeeNoApi: FeeNoApiRequests;\n\n  common: Common;\n\n  maxFeePerGas: string;\n\n  maxPriorityFeePerGas: string;\n\n  bundleId: string;\n\n  /**\n   * FeeNoRequests instance is being created in the FeeNo class by it's createFeenoRequest() method.\n   * @example\n   * Implementation with all params.\n   * ```typescript\n   * import { FeeNo, FeeNoApiRequests }  from '@peanut.trade/feeno-sdk';\n   *\n   * const feeNo = new FeeNo();\n   * const feeNoRequest = feeNo.createFeenoRequest(estimateData, provider);\n   * ```\n   */\n  constructor(\n    estimationResponse: EstimationResponse,\n    provider: Web3Provider,\n    chainId: SupportedChains,\n    FeeNoApi: FeeNoApiRequests\n  ) {\n    this.estimationResponse = estimationResponse;\n    this.provider = provider;\n    this.signer = provider.getSigner();\n    this.chainId = chainId;\n    this.FeeNoApi = FeeNoApi;\n    this.common = new Common({ chain: this.chainId, hardfork: Hardfork.London });\n    this.maxFeePerGas = ethers.utils.parseUnits(\n      this.estimationResponse.marketGasPriceGwei.baseFee.toString(),\n      'gwei'\n    )._hex;\n    this.maxPriorityFeePerGas = ethers.utils.hexlify(ethers.BigNumber.from(0));\n    this.bundleId = '0x';\n  }\n\n  private async _getSignature(signerAddress: AddressLike, hashedMessage: string): Promise<string> {\n    const signature = this.provider.provider.request\n      ? await this.provider.provider.request({\n          method: 'eth_sign',\n          params: [signerAddress, hashedMessage],\n        })\n      : '';\n\n    if (!signature) throw new Error('No signature data');\n\n    return signature;\n  }\n\n  private _getSwapType(sendRequest: RequestParams): ExType {\n    if (sendRequest.exType !== 'optimalSwap') {\n      return sendRequest.exType;\n    }\n    if (\n      !this.estimationResponse.executionSwap.cexSwap.miningSpeed[sendRequest.speed].ethGasFee ||\n      this.estimationResponse.executionSwap.dexSwap.miningSpeed[sendRequest.speed].ethGasFee <\n        this.estimationResponse.executionSwap.cexSwap.miningSpeed[sendRequest.speed].ethGasFee\n    ) {\n      return ExType.DEX;\n    }\n    return ExType.CEX;\n  }\n\n  private async _approveTokensUse(exType: ExType): Promise<string[]> {\n    const txsToApprove: approveRequired[] = this.estimationResponse.approveRequired;\n    const signerAdress: string = await this.signer.getAddress();\n    const ERC721Abi = abi;\n    return Promise.all(\n      txsToApprove.map(async (txToApprove, txIndex) => {\n        const approvalGasUsage =\n          this.estimationResponse.executionSwap[exType].simulations.approve[txIndex].gasUsage;\n        let gasLimit;\n        let contract;\n        let amountOrId;\n        if (txToApprove.tokenId) {\n          contract = new ethers.Contract(\n            txToApprove.tokenAddress.toString(),\n            ERC721Abi,\n            this.provider\n          );\n          amountOrId = txToApprove.tokenId;\n          gasLimit = ethers.BigNumber.from(55000);\n        } else {\n          contract = new ethers.Contract(\n            txToApprove.tokenAddress.toString(),\n            ERC20ABI,\n            this.provider\n          );\n          amountOrId = txToApprove.amount;\n          gasLimit = ethers.BigNumber.from(approvalGasUsage);\n        }\n        const tx = await contract.populateTransaction.approve(txToApprove.spender, amountOrId);\n        const nonce = (await this.signer.getTransactionCount()) + txIndex;\n\n        const txData = {\n          type: '0x02',\n          chainId: ethers.utils.hexlify(this.chainId),\n          nonce: ethers.utils.hexlify(ethers.BigNumber.from(nonce), { hexPad: 'left' }),\n          maxFeePerGas: this.maxFeePerGas,\n          maxPriorityFeePerGas: this.maxPriorityFeePerGas,\n          gasLimit: ethers.utils.hexlify(gasLimit, { hexPad: 'left' }),\n          to: tx.to,\n          value: ethers.utils.hexlify(ethers.BigNumber.from(0)),\n          data: tx.data,\n        };\n        return this._signTransfer(txData, signerAdress);\n      })\n    );\n  }\n\n  private async _approveETHTransfer(exType: ExType, speed: Speed, nonce: number): Promise<string> {\n    let value;\n    const signerAddress: AddressLike = await this.signer.getAddress();\n    const feenoContractAddress: AddressLike = config[this.chainId].FeeNoContract;\n\n    const ETHGasFee = (\n      this.estimationResponse.executionSwap[exType].miningSpeed[speed].ethGasFee *\n      10 ** 18\n    ).toFixed(0);\n\n    if (this.estimationResponse.ETHQuantity) {\n      value = this.estimationResponse.erc20TokenToPayFee\n        ? ethers.BigNumber.from(this.estimationResponse.ETHQuantity).add(ETHGasFee).toString()\n        : this.estimationResponse.ETHQuantity;\n    } else {\n      value = ETHGasFee;\n    }\n\n    const tx = {\n      type: '0x02',\n      chainId: ethers.utils.hexlify(this.chainId),\n      nonce: ethers.utils.hexlify(\n        ethers.BigNumber.from((await this.signer.getTransactionCount()) + nonce),\n        {\n          hexPad: 'left',\n        }\n      ),\n      maxFeePerGas: this.maxFeePerGas,\n      maxPriorityFeePerGas: this.maxPriorityFeePerGas,\n      gasLimit: ethers.utils.hexlify(ethers.BigNumber.from(21100), { hexPad: 'left' }),\n      from: signerAddress,\n      to: feenoContractAddress,\n      value: ethers.utils.hexlify(ethers.BigNumber.from(value)),\n    };\n    return this._signTransfer(tx, signerAddress);\n  }\n\n  private async _signTransfer(tx: TxData, signerAddress: AddressLike): Promise<string> {\n    const txFactory = FeeMarketEIP1559Transaction.fromTxData(tx, { common: this.common });\n    const unsignedTx = txFactory.getMessageToSign();\n    const signature = await this._getSignature(signerAddress, ethers.utils.hexlify(unsignedTx));\n\n    const signatureParts = ethers.utils.splitSignature(signature);\n\n    const txWithSignature = txFactory._processSignature(\n      signatureParts.v,\n      Buffer.from(ethers.utils.arrayify(signatureParts.r)),\n      Buffer.from(ethers.utils.arrayify(signatureParts.s))\n    );\n\n    return ethers.utils.hexlify(txWithSignature.serialize());\n  }\n\n  private async _getExecuteAllowance(exType: ExType, speed: Speed): Promise<string> {\n    const signerAdress: string = await this.signer.getAddress();\n    const metadataToSign =\n      this.estimationResponse.executionSwap[exType].miningSpeed[speed].data.messageForSing;\n\n    const message = ethers.utils.arrayify(metadataToSign);\n\n    const hashedMessage = ethers.utils.keccak256(\n      ethers.utils.concat([\n        ethers.utils.toUtf8Bytes('\\x19Ethereum Signed Message:\\n'),\n        ethers.utils.toUtf8Bytes(String(message.length)),\n        message,\n      ])\n    );\n\n    const signature = await this._getSignature(signerAdress, hashedMessage);\n\n    return signature;\n  }\n\n  /**\n   * Send submit transaction.\n   * @example\n   * ```typescript\n   * import { FeeNo, FeeNoApiRequests }  from '@peanut.trade/feeno-sdk';\n   *\n   * const feeNo = new FeeNo( 1 );\n   * const feeNoRequest = feeNo.createFeenoRequest(estimateData, provider);\n   * // If submit is successful you will get SubmissionResponse typed response.\n   * const submitResponce = FeeNoRequestInstance.send(sendRequest);\n   * ```\n   * @param {RequestParams} sendRequest\n   * @returns {Promise<SubmissionResponse>}\n   */\n  async send(sendRequest: RequestParams): Promise<SubmissionResponse> {\n    const eXtype = this._getSwapType(sendRequest);\n\n    const approvalTxRawData = await this._approveTokensUse(eXtype);\n\n    if (this.estimationResponse.ETHQuantity || !this.estimationResponse.erc20TokenToPayFee) {\n      approvalTxRawData.push(\n        await this._approveETHTransfer(eXtype, sendRequest.speed, approvalTxRawData.length)\n      );\n    }\n\n    const metadataSignature = await this._getExecuteAllowance(eXtype, sendRequest.speed);\n\n    const txToSubmit = {\n      estimationId: this.estimationResponse.id,\n      approvalTxRawData,\n      userSign: metadataSignature,\n      processingMode: eXtype,\n      miningSpeed: sendRequest.speed,\n      blocksCountToResubmit: 20,\n    };\n\n    const response = await this.FeeNoApi.send(txToSubmit);\n    this.bundleId = response.bundleId ? response.bundleId : this.bundleId;\n    return response;\n  }\n\n  /**\n   * Cancel submit request if it's not mined yet.\n   * @example\n   * ```typescript\n   * import { FeeNo, FeeNoApiRequests }  from '@peanut.trade/feeno-sdk';\n   *\n   * const feeNo = new FeeNo( 1 );\n   * const feeNoRequest = feeNo.createFeenoRequest(estimateData, provider);\n   * // errorMessage: \"Transaction not found\"\n   * const cancelRequest1 = feeNoRequest.cancel();\n   *\n   * const submitResponce = feeNoRequest.send(sendRequest);\n   * // Transaction will be canceled. You will get SubmissionResponse type response.\n   * const cancelRequest2 = feeNoRequest.cancel();\n   *\n   * // Transaction is canceled already. You will get the same response as from cancelRequest2.\n   * const cancelRequest3 = feeNoRequest.cancel();\n   * ```\n   * @returns {Promise<SubmissionResponse>}\n   */\n  async cancel(): Promise<SubmissionResponse> {\n    return this.FeeNoApi.cancel(this.bundleId);\n  }\n\n  /**\n   * Get the transaction status.\n   * @example\n   * ```typescript\n   * import { FeeNo, FeeNoApiRequests }  from '@peanut.trade/feeno-sdk';\n   *\n   * const feeNo = new FeeNo( 1 );\n   * const feeNoRequest= feeNo.createFeenoRequest(estimateData, provider);\n   * // errorMessage: \"Please, send transaction first\"\n   * const cancelRequest1 = feeNoRequest.status();\n   *\n   * const submitResponce = feeNoRequest.send(sendRequest);\n   * // You will get SubmissionResponse type response\n   * const cancelRequest2 = feeNoRequest.status();\n   * ```\n   * @returns {Promise<SubmissionResponse>}\n   */\n  async getStatus(): Promise<SubmissionResponse> {\n    return this.FeeNoApi.getStatus(this.bundleId);\n  }\n}\n"],"names":["TransactionType","ExType","SupportedChains","runtime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","obj","key","value","defineProperty","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","generator","create","Generator","context","Context","_invoke","state","method","arg","Error","undefined","done","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","type","makeInvokeMethod","fn","call","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","result","__await","then","unwrapped","error","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","doneResult","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","module","regeneratorRuntime","accidentalStrictMode","globalThis","Function","FeeNoApiRequests","apiUrl","getTokens","url","axios","get","data","tokens","createFeenoRequest","requestParams","post","send","txToSubmit","getStatus","bundleId","cancel","TransactionStatus","FeeNo","chainId","includes","apiURL","config","FeeNoApi","params","provider","response","WalletFeeNoRequest","Web3ProviderFeeNoRequest","estimationResponse","common","Common","chain","hardfork","Hardfork","London","maxFeePerGas","ethers","utils","parseUnits","marketGasPriceGwei","baseFee","toString","_hex","maxPriorityFeePerGas","hexlify","BigNumber","from","_getSwapType","sendRequest","exType","executionSwap","cexSwap","miningSpeed","speed","ethGasFee","dexSwap","DEX","CEX","_approveTokensUse","ERC721Abi","abi","all","approveRequired","map","txToApprove","txIndex","approvalGasUsage","_this","simulations","approve","gasUsage","tokenId","contract","Contract","tokenAddress","amountOrId","gasLimit","ERC20ABI","amount","getTransactionCount","nonce","populateTransaction","spender","hexPad","tx","signTransaction","_approveETHTransfer","getAddress","signerAddress","feenoContractAddress","FeeNoContract","ETHGasFee","toFixed","ETHQuantity","erc20TokenToPayFee","add","to","_signMessage","message","signMessage","_getExecuteAllowance","arrayify","messageForSing","eXtype","approvalTxRawData","estimationId","id","userSign","processingMode","blocksCountToResubmit","signer","getSigner","_getSignature","hashedMessage","request","signature","txsToApprove","signerAdress","txData","_signTransfer","txFactory","FeeMarketEIP1559Transaction","fromTxData","unsignedTx","getMessageToSign","signatureParts","splitSignature","txWithSignature","_processSignature","v","Buffer","r","s","serialize","keccak256","concat","toUtf8Bytes","String"],"mappings":"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"}